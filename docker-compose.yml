services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: anas
      POSTGRES_PASSWORD: anas
      POSTGRES_DB: keycloak
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: anas.lahboub@edu.uiz.ac.ma
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "8888:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: keycloak
    restart: unless-stopped
    command: ["start-dev"]
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: anas
      KC_DB_PASSWORD: anas
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME: localhost
      KC_PROXY_HEADERS: xforwarded
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    volumes:
      - keycloak_data:/opt/keycloak/data
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network

  discovery-service:
    build: ./discovery-service
    container_name: discovery-service
    restart: unless-stopped
    ports:
      - "8761:8761"
    depends_on:
      - keycloak
    networks:
      - app-network

  gateway-service:
    build: ./gitway-service
    container_name: gateway-service
    restart: unless-stopped
    ports:
      - "7777:7777"
    depends_on:
      - discovery-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - app-network

  chat-service:
    build: ./chat-service
    container_name: chat-service
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      - gateway-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - app-network

  group-service:
    build: ./group-service
    container_name: group-service
    restart: unless-stopped
    ports:
      - "8082:8082"
    depends_on:
      - gateway-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - app-network

  post-service:
    build: ./post-service
    container_name: post-service
    restart: unless-stopped
    ports:
      - "8083:8083"
    depends_on:
      - gateway-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - app-network

  angular-app:
    build: ./angular-app
    container_name: angular-app
    restart: unless-stopped
    ports:
      - "4200:80"
    networks:
      - app-network

volumes:
  postgres_data:
  pgadmin_data:
  keycloak_data:
  redis_data:

networks:
  app-network:
    driver: bridge
