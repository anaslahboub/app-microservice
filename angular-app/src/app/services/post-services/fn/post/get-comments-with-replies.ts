/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';


export interface GetCommentsWithReplies$Params {
  postId: number;
}

export function getCommentsWithReplies(http: HttpClient, rootUrl: string, params: GetCommentsWithReplies$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<{
'id'?: number;
'content'?: string;
'authorId'?: string;
'postId'?: number;
'parentCommentId'?: number;
'createdDate'?: string;
'replies'?: Array<any>;
'reply'?: boolean;
}>>> {
  const rb = new RequestBuilder(rootUrl, getCommentsWithReplies.PATH, 'get');
  if (params) {
    rb.path('postId', params.postId, {});
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<Array<{
      'id'?: number;
      'content'?: string;
      'authorId'?: string;
      'postId'?: number;
      'parentCommentId'?: number;
      'createdDate'?: string;
      'replies'?: Array<any>;
      'reply'?: boolean;
      }>>;
    })
  );
}

getCommentsWithReplies.PATH = '/api/v1/posts/{postId}/comments';
